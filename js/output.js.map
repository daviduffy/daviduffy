{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"output.js","sourcesContent":["const oc = {\n  toggleClassMenu: function() {\n    oc.menu.classList.add('oc--anim');\n    if (!oc.menu.classList.contains('oc--vis')) {\n      oc.menu.classList.add('oc--vis');\n    } else {\n      oc.menu.classList.remove('oc--vis');\n    }\n  },\n  OnTransitionEnd: function() {\n    oc.menu.classList.remove('oc--anim');\n  },\n  menu: document.querySelector('.oc'),\n  bars: document.querySelector('.h__trg'),\n  times: document.querySelector('.oc__trg'),\n  bg: document.querySelector('.oc__x'),\n  links: Array.from(document.querySelectorAll('.a--menu')),\n  init: function(){\n    oc.menu.addEventListener(\"transitionend\", oc.OnTransitionEnd, false);\n    oc.bars.addEventListener(\"click\", oc.toggleClassMenu, false);\n    oc.bg.addEventListener(\"click\", oc.toggleClassMenu, false);\n    oc.times.addEventListener(\"click\", oc.toggleClassMenu, false);\n    oc.links.forEach(function(link) {\n      link.addEventListener(\"click\", oc.toggleClassMenu, false);\n    })\n  }\n}\n\nwindow.oc = oc;\n\n(function() {\n    var $body = document.getElementsByTagName('body')[0];\n    var app = {\n        // routes (i.e. views and their functionality) defined here\n        routes: {\n            splash: {\n                entered: function() {\n                    // app.newRouteElem.innerHTML = '<p>This JavaScript content overrides the static content for this view.</p>';\n                }\n             },\n            about: {\n                entered: function() {\n\n                    // if the MyAbout object doesn't exist yet, create it\n                    if ( !window.MyAbout ) {\n                        window.onload = app.newRoute.aboutInit();\n                    } \n\n                    // set heights of DOM elements again just in case they aren't set yet\n                    MyAbout.setHeights();\n\n                    // enable color changes to icon elements on scroll\n                    window.addEventListener('scroll', MyAbout.scrollTrigger );\n\n                     // app.newRouteElem.innerHTML = '<p>This JavaScript content overrides the static content for this view.</p>';\n                    },\n                    aboutInit: function() {\n\n                    // create the about object container\n                    window.MyAbout = {};\n\n                    // fill it with things\n                    MyAbout.scrollTimer       = null;\n                    MyAbout.aboutElement      = document.getElementById('about');\n                    MyAbout.aboutElement.classList.add('scroll-colors-enabled','_1_lw');\n\n                    MyAbout.setHeights        = function () {\n                        this.aboutHeight      = this.aboutElement.scrollHeight;\n                        this.headHeight       = document.querySelectorAll('#about .header-spacer')[0].scrollHeight;\n                        this.screenHeight     = window.innerHeight;\n                        this.adjustedHeight   = this.aboutHeight - this.headHeight - ( this.screenHeight / 2 );\n                    }; \n                    MyAbout.changeClasses     = function ( element , string ) {\n                        element.classList.remove('_1_lw', '_2_uw', '_3_jh', '_4_cc', '_5_me');\n                        element.classList.add( string );\n                    };\n                    MyAbout.scrollTracker     = function ( event ) {\n                        if ( MyAbout.scrollQuery( 0, 0.13 )) {\n                          MyAbout.changeClasses(MyAbout.aboutElement, '_1_lw');\n                        }\n                        if ( MyAbout.scrollQuery( 0.131, 0.34 )) {\n                          MyAbout.changeClasses(MyAbout.aboutElement, '_2_uw');\n                        }\n                        if ( MyAbout.scrollQuery( 0.341, 0.57 )) {\n                          MyAbout.changeClasses(MyAbout.aboutElement, '_3_jh');\n                        }\n                        if ( MyAbout.scrollQuery( 0.571 , 0.79 )) {\n                          MyAbout.changeClasses(MyAbout.aboutElement, '_4_cc');\n                        }\n                        if ( MyAbout.scrollQuery( 0.791, 1 )) {\n                          MyAbout.changeClasses(MyAbout.aboutElement, '_5_me');\n                        }\n                    };\n                    MyAbout.scrollQuery = function ( int1, int2 ) {\n                        if (\n                            ( window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 ) >= ( MyAbout.adjustedHeight * int1 ) &&\n                            ( window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 ) < ( MyAbout.adjustedHeight * int2 )\n                         ) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    };\n                    MyAbout.scrollTrigger = function () {\n\n                        // delay firing this function until a new scroll event hasn't happened for 30ms\n                        if (MyAbout.scrollTimer) {\n\n                            // clear any previous pending timer\n                            clearTimeout(MyAbout.scrollTimer);   \n                        }\n\n                        // set new timer\n                        MyAbout.scrollTimer = setTimeout(MyAbout.handleScroll, 30);   \n                    };\n                    MyAbout.handleScroll = function () {\n                        console.log('scroll');\n                        window.MyAbout.scrollTracker();\n                    };\n                },\n                exited: function(){\n                    console.log('exiting');\n                    // remove scroll event listener\n                    window.removeEventListener('scroll', MyAbout.scrollTrigger );\n                }\n            },\n            portfolio: {\n                entered: function() {\n                    // app.newRouteElem.innerHTML = '<p>This JavaScript content overrides the static content for this view.</p>';\n                }\n            },\n            contact: {\n                entered: function() {\n                     // app.newRouteElem.innerHTML = '<p>This JavaScript content overrides the static content for this view.</p>';\n                }\n            }\n        },\n        // The default view is recorded here. A more advanced implementation\n        // might query the DOM to define it on the fly.\n        default: 'splash',\n        routeChange: function(e) {\n\n            // if this function was triggered by a hashchange set previous route info\n            if (e) {\n\n                // set previous route info\n                app.prevRouteID = e.oldURL.split(\"#\")[1];\n                app.prevRoute = app.routes[app.prevRouteID];\n\n                // and run exited function\n                if (app.prevRoute.exited) {\n                    app.prevRoute.exited();\n                }\n            }\n\n            // set new route info\n            app.newRouteID = location.hash.slice(1); // 'splash', 'about', etc\n            app.newRoute = app.routes[app.newRouteID];\n\n            // classes housekeeping\n            $body.classList = '';\n            $body.classList.add( app.newRouteID );\n\n\n            // run entered function\n            app.newRoute.entered();\n\n            // target new route\n            app.newRouteElem = document.getElementById(app.newRouteID);\n\n        },\n\n        init: function() {\n\n            oc.init();\n\n            // just in case newURL and oldURL aren't supported\n            if(!window.HashChangeEvent)(function(){\n                var lastURL=document.URL;\n                window.addEventListener(\"hashchange\",function(event){\n                    Object.defineProperty(event,\"oldURL\",{enumerable:true,configurable:true,value:lastURL});\n                    Object.defineProperty(event,\"newURL\",{enumerable:true,configurable:true,value:document.URL});\n                    lastURL=document.URL;\n                });\n            }());\n\n            // If there is no hash in the URL, change the URL to\n            // include the default view's hash.\n            if (!window.location.hash) {\n                window.location.hash = app.default;\n            } else {\n                // Execute routeChange() for the first time\n                app.routeChange();\n            }\n\n            // Fire all of the ins and outs of route changes\n            window.addEventListener('hashchange', function(e) {\n                app.routeChange(e);\n            });\n\n\n        }\n    };\n    window.app = app;\n})();\n\napp.init();"]}